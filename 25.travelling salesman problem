#include <stdio.h>
#include <limits.h>
#define MAX 20
#define INF INT_MAX
int n;
int dist[MAX][MAX]; 
int dp[1 << MAX][MAX];
int tsp(int mask, int pos) {
    if (mask == ((1 << n) - 1)) {
        return dist[pos][0]; 
    }
    if (dp[mask][pos] != -1) {
        return dp[mask][pos];
    }
    int ans = INF;
    for (int city = 0; city < n; city++) {
        if ((mask & (1 << city)) == 0) {
            int newAns = dist[pos][city] + tsp(mask | (1 << city), city);
            ans = (ans < newAns) ? ans : newAns;
        }
    }
    return dp[mask][pos] = ans;
}
int main() {
    printf("Enter the number of cities: ");
    scanf("%d", &n);

    printf("Enter the distance matrix:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &dist[i][j]);
        }
    }
    for (int i = 0; i < (1 << n); i++) {
        for (int j = 0; j < n; j++) {
            dp[i][j] = -1;
        }
    }
    printf("The minimum cost of the tour is %d\n", tsp(1, 0));
    return 0;
}
output
Enter the number of cities: 3
Enter the distance matrix:
13 13 14 14
12 19 34 9
8 9 19 20
The minimum cost of the tour is 37
