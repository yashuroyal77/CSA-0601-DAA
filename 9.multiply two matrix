#include <stdio.h>
void getMatrixElements(int matrix[][10], int row, int column) {
    printf("\nEnter elements:\n");
    for (int i = 0; i < row; ++i) {
        for (int j = 0; j < column; ++j) {
            printf("Enter element a%d%d: ", i + 1, j + 1);
            scanf("%d", &matrix[i][j]);
        }
    }
}
void multiplyMatrices(int first[][10], int second[][10], int result[][10], int r1, int c1, int r2, int c2) {
    for (int i = 0; i < r1; ++i) {
        for (int j = 0; j < c2; ++j) {
            result[i][j] = 0;
        }
    }
    for (int i = 0; i < r1; ++i) {
        for (int j = 0; j < c2; ++j) {
            for (int k = 0; k < c1; ++k) {
                result[i][j] += first[i][k] * second[k][j];
            }
        }
    }
}
void display(int result[][10], int row, int column) {
    printf("\nOutput Matrix:\n");
    for (int i = 0; i < row; ++i) {
        for (int j = 0; j < column; ++j) {
            printf("%d  ", result[i][j]);
            if (j == column - 1) {
                printf("\n");
            }
        }
    }
}
int main() {
    int first[10][10], second[10][10], result[10][10], r1, c1, r2, c2;
    printf("Enter rows and columns for the first matrix: ");
    scanf("%d %d", &r1, &c1);
    printf("Enter rows and columns for the second matrix: ");
    scanf("%d %d", &r2, &c2);
    while (c1 != r2) {
        printf("Error! Column of first matrix not equal to row of second.\n");
        printf("Enter rows and columns for the first matrix: ");
        scanf("%d %d", &r1, &c1);
        printf("Enter rows and columns for the second matrix: ");
        scanf("%d %d", &r2, &c2);
    }
    getMatrixElements(first, r1, c1);
    getMatrixElements(second, r2, c2);
    multiplyMatrices(first, second, result, r1, c1, r2, c2);
    display(result, r1, c2);
    return 0;
}
output
Enter rows and columns for the first matrix: 3
3
Enter rows and columns for the second matrix: 3
3

Enter elements:
Enter element a11: 1 2 3
Enter element a12: Enter element a13: Enter element a21: 4 5 6
Enter element a22: Enter element a23: Enter element a31: 7 8 9
Enter element a32: Enter element a33:
Enter elements:
Enter element a11: 12 13 14
Enter element a12: Enter element a13: Enter element a21: 14 15 16
Enter element a22: Enter element a23: Enter element a31: 17 18 19
Enter element a32: Enter element a33:
Output Matrix:
91  97  103
220  235  250
349  373  397
